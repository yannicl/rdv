<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/security
	                    http://www.springframework.org/schema/security/spring-security.xsd">

	<security:global-method-security pre-post-annotations="enabled" />
	
	<security:http pattern="/api/**" use-expressions="true" create-session="stateless" entry-point-ref="http403ForbiddenEntryPoint">
		<security:intercept-url pattern="/api/**" access="isAuthenticated()"/>
		<security:custom-filter ref="restAuthenticationFilter" after="SECURITY_CONTEXT_FILTER"/>
	</security:http>
	  
	<security:http pattern="/login/**" security="none"/>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="restAuthenticationProvider" />
	</security:authentication-manager>
	
	<bean id="apiRequestMatcher" class="org.springframework.security.web.util.AntPathRequestMatcher">
        <constructor-arg value="/api/**" />
    </bean>

	<bean id="restAuthenticationProvider" class="com.yannic.rdv.rest.security.RestAuthenticationProvider" />


	<bean id="restAuthenticationFilter" class="com.yannic.rdv.rest.security.RestAuthenticationFilter">
		<constructor-arg ref="apiRequestMatcher" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
	
	<bean id="http403ForbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

</beans>	